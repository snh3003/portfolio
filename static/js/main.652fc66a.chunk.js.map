{"version":3,"sources":["components/SideNav/SideNav.js","components/About/About.js","components/SkillCard/SkillCard.js","components/Skills/Skills.js","components/ProjectCard/ProjectCard.js","components/Projects/Projects.js","components/SectionContainer/SectionContainer.js","components/Portfolio/Portfolio.js","constants/About.js","constants/Skills.js","constants/Projects.js","components/App.js","serviceWorker.js","index.js"],"names":["SideNav","handleSectionClick","className","src","alt","onClick","About","bio","SkillCard","skill","Skills","skills","industryKnowledge","map","techSkills","interpersonalSkills","ProjectCard","project","name","description","href","link","Projects","projects","projectList","SectionContainer","selectedHeading","selectedQuote","selectedSection","about","Portfolio","heading","quote","class","batch","App","section","setState","state","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.652fc66a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './sidenav.css';\r\n\r\nexport const SideNav = ({ handleSectionClick }) => {\r\n    return (\r\n        <div className=\"sidenav\">\r\n            <img\r\n                src=\"https://avatars3.githubusercontent.com/u/46817090?s=460&u=2aa01c6c387008d829921455ec4e7fb4c128cf3e&v=4\"\r\n                className=\"avatar\"\r\n                alt=\"avatar\"\r\n            />\r\n            <h2 className=\"main-name\">Shahab Hashmi</h2>\r\n            <p className=\"subtitle\">\"Dont let your dreams die!!!\"</p>\r\n            <div className=\"sections-list\">\r\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"about\")}>About Me</p>\r\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"skills\")}>Skills</p>\r\n                <p className=\"section-list-element\" onClick={() => handleSectionClick(\"projects\")}>Education</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nimport './about.css';\r\n\r\nexport const About = ({ bio }) => {\r\n    return (\r\n        <div className=\"about-container\">\r\n            <p>{bio}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './skill-card.css';\r\n\r\nexport const SkillCard = ({ skill }) => {\r\n    return (\r\n        <div className=\"skill-card\">\r\n            {skill}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { SkillCard } from './../SkillCard/SkillCard';\r\n\r\nimport './skills.css';\r\n\r\nexport const Skills = ({ skills }) => {\r\n    return (\r\n        <div className=\"skills-container\">\r\n            <h3>Industry Knowledge</h3>\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    skills.industryKnowledge.map(skill => <SkillCard skill={skill} />)\r\n                }\r\n            </div>\r\n            <h3>Tech Skills</h3>\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    skills.techSkills.map(skill => <SkillCard skill={skill} />)\r\n                }\r\n            </div>\r\n            <h3>Interpersonal Skills</h3>\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    skills.interpersonalSkills.map(skill => <SkillCard skill={skill} />)\r\n                }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport './project-card.css';\r\n\r\nexport const ProjectCard = ({ project }) => {\r\n    return (\r\n        <div className=\"project-card\">\r\n            <p><b>Name:</b> {project.name}</p>\r\n            <p><b>Description:</b> {project.description}</p>\r\n            <p><b>Link:</b> <a href={project.link}>{project.link}</a> </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { ProjectCard } from './../ProjectCard/ProjectCard';\r\n\r\nimport './projects.css';\r\n\r\nexport const Projects = ({ projects }) => {\r\n    return (\r\n        <div className=\"projects-container\">\r\n            <div className=\"industry-skill-container\">\r\n                {\r\n                    projects.projectList.map(project => <ProjectCard project={project} />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { About } from './../About/About';\r\nimport { Skills } from './../Skills/Skills';\r\nimport { Projects } from './../Projects/Projects';\r\n\r\nimport './section-container.css';\r\n\r\nexport const SectionContainer = ({ \r\n    selectedHeading, \r\n    selectedQuote,\r\n    selectedSection,\r\n    about,\r\n    skills,\r\n    projects }) => {\r\n    return (\r\n        <div className=\"section-container\">\r\n            <div className=\"section-heading-container\">\r\n                <h1 className=\"main-heading\">{selectedHeading}</h1>\r\n                <p className=\"main-quote\">{selectedQuote}</p>\r\n            </div>\r\n            <div className=\"section-component\">\r\n                {\r\n                    {\r\n                        about: <About bio={about.bio} />,\r\n                        skills: <Skills skills={skills} />,\r\n                        projects: <Projects projects={projects} />\r\n                    }[selectedSection]\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { SideNav } from './../SideNav/SideNav';\r\nimport { SectionContainer } from './../SectionContainer/SectionContainer';\r\n\r\nimport './portfolio.css';\r\n\r\nexport const Portfolio = ({ \r\n    handleSectionClick,\r\n    selectedHeading, \r\n    selectedQuote,\r\n    selectedSection,\r\n    about,\r\n    skills,\r\n    projects }) => {\r\n    return (\r\n        <div className=\"portfolio-container\">\r\n            <div className=\"sidenav-container\">\r\n                <SideNav\r\n                    handleSectionClick={handleSectionClick}\r\n                />\r\n            </div>\r\n            <div className=\"main-section-container\">\r\n                <SectionContainer\r\n                    selectedSection={selectedSection}\r\n\t\t\t\t\tselectedHeading={selectedHeading}\r\n\t\t\t\t\tselectedQuote={selectedQuote}\r\n\t\t\t\t\tabout={about}\r\n\t\t\t\t\tskills={skills}\r\n\t\t\t\t\tprojects={projects} />\r\n            </div>\r\n        </div>\r\n    );\r\n};","export const about = {\r\n    heading: \"Little bit about myself\",\r\n    \"quote\": \"Success would only depend on your hardwork.\",\r\n    \"bio\": \"I’m a sophomore at SRM University-AP, Amaravati pursuing Computer Science Engineering. I am a component of the Admin team of the Entrepreneurial Innovation Lab - Ennovab which was initiated by the Alumni of Sutardja Center for Entrepreneurship & Technology, University of California Berkeley. I am an integral part of a QS award-winning, victoriously triumphing student-led multidisciplinary research lab, Next Tech Lab.\"\r\n};","export const skills = {\r\n    heading: \"Skills\",\r\n    quote: \"Build your skills, not your resume\",\r\n    techSkills: [\r\n        \"JavaScript\",\r\n        \"ReactJS\",\r\n        \"Flutter\",\r\n        \"Redux\",\r\n        \"C++\",\r\n        \"C#\",\r\n        \"C\",\r\n        \"Java\",\r\n        \"Python\",\r\n        \"Dart\",\r\n        \"HTML\",\r\n        \"CSS\",\r\n        \"jQuery\",\r\n        \"Bootstrap\",\r\n        \"Material Design\",\r\n        \"Git\",\r\n        \"GitHub\",\r\n    ],\r\n    industryKnowledge: [\r\n        \"Marketing\",\r\n        \"Publicity\",\r\n        \"Content Writing\",\r\n        \"Creative Writing\",\r\n        \"Web Content\",\r\n        \"Frontend\",\r\n        \"Web Development\",\r\n        \"Android\",\r\n    ],\r\n    interpersonalSkills: [\r\n        \"Communication\",\r\n        \"Teaching\",\r\n        \"Time Management\",\r\n        \"Leadership\",\r\n        \"Management\",\r\n        \"Human Resouce Management\",\r\n    ]\r\n};","export const projects = {\r\n    heading: \"Education\",\r\n    quote: \"Ahh, Learning alone is boring, implementation is the real fun\",\r\n    projectList: [\r\n        {\r\n            name: \"St. Joseph, Civil Lines, Gorakhpur\",\r\n            class: \"Lower Kinder Garden - 5th\",\r\n        }, {\r\n            name: \"Sanskriti Public School, Ranidiha, Gorakhpur\",\r\n            class: \"6th - 9th\",\r\n            link: \"https://www.spsgkp.com/\"\r\n        }, {\r\n            name: \"Delhi Public School, Eldeco, Lucknow\",\r\n            class: \"10th - PCM (11th - 12th)\",\r\n            link: \"http://www.dpseldeco.com/\"\r\n        }, {\r\n            name: \"SRM University AP, Amaravati\",\r\n            batch: \"B.Tech CSE 2018 - 2022\",\r\n            link: \"https://srmap.edu.in/\"\r\n        }\r\n    ]\r\n}","import React, { Component } from 'react';\r\n\r\nimport { Portfolio } from './Portfolio/Portfolio';\r\n\r\nimport { about } from './../constants/About';\r\nimport { skills } from './../constants/Skills';\r\nimport { projects } from './../constants/Projects';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tconstructor () {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tselectedSection: \"\",\r\n\t\t\tselectedHeading: \"\",\r\n\t\t\tselectedQuote: \"\",\r\n\t\t\tabout: null,\r\n\t\t\tskills: null,\r\n\t\t\tprojects: null,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentWillMount () {\r\n\t\tthis.setState ({ \r\n\t\t\tabout,\r\n\t\t\tskills,\r\n\t\t\tprojects,\r\n\t\t\tselectedHeading: about.heading,\r\n\t\t\tselectedQuote: about.quote,\r\n\t\t\tselectedSection: \"about\" \r\n\t\t});\r\n\t}\r\n\r\n\thandleSectionClick =  (section) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedSection: section,\r\n\t\t\tselectedHeading: this.state[section].heading,\r\n\t\t\tselectedQuote: this.state[section].quote\r\n\t\t})\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Portfolio\r\n\t\t\t\t\thandleSectionClick={this.handleSectionClick}\r\n\t\t\t\t\tselectedSection={this.state.selectedSection}\r\n\t\t\t\t\tselectedHeading={this.state.selectedHeading}\r\n\t\t\t\t\tselectedQuote={this.state.selectedQuote}\r\n\t\t\t\t\tabout={this.state.about}\r\n\t\t\t\t\tskills={this.state.skills}\r\n\t\t\t\t\tprojects={this.state.projects}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}